<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>TOOL-Regularization on Memo</title>
    <link>https://evansin100.github.io/categories/tool-regularization/</link>
    <description>Recent content in TOOL-Regularization on Memo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    
	<atom:link href="https://evansin100.github.io/categories/tool-regularization/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title></title>
      <link>https://evansin100.github.io/post/tool-regularization/readme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://evansin100.github.io/post/tool-regularization/readme/</guid>
      <description>Concept  Normalisation adjusts the data regularisation adjusts the prediction function. =&amp;gt; 所以regularisation不是要處理data,而是改動loss function增加他的模糊性  Regularisation imposes some control on this by rewarding simpler fitting functions over complex ones
=&amp;gt; 所以通常就是在loss function後面加個penality function,來解決overfitting問題 For instance, it can promote that a simple log function with a RMS error of x is preferable to a 15th-degree polynomial with an error of x/2. Tuning the trade-off is up to the model developer: if you know that your data are reasonably smooth in reality, you can look at the output functions and fitting errors, and choose your own balance.</description>
    </item>
    
  </channel>
</rss>