<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>COMPILER-FRAMEWORK-GLOW on Memo</title>
    <link>https://evansin100.github.io/categories/compiler-framework-glow/</link>
    <description>Recent content in COMPILER-FRAMEWORK-GLOW on Memo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    
	<atom:link href="https://evansin100.github.io/categories/compiler-framework-glow/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title></title>
      <link>https://evansin100.github.io/post/compiler-framework-glow/readme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://evansin100.github.io/post/compiler-framework-glow/readme/</guid>
      <description>Introduction Glow is a machine learning compiler and execution engine for hardware accelerators.(nji It is designed to be used as a backend for high-level machine learning frameworks.
The compiler is designed to allow state of the art compiler optimizations
and code generation of neural network graphs. This library is in active development.
Glow是一個機器學習編譯器，可以用來加速不同硬體平臺上深度學習框架的效能，
同時也能讓硬體開發人員，更專注建構可支援PyTorch等深度學習框架的硬體加速器
所以目的也是為了推廣他們的pytorch
Note: 在PyTorch中，图架构是动态的，这意味着图是在运行时创建的。
而在TensorFlow中，图架构是静态的，这意味着先编译出图然后再运行
Note: PyTorch更适合于在研究中快速进行原型设计、业余爱好者和小型项目，
TensorFlow则更适合大规模的调度，尤其当考虑到跨平台和嵌入式调度操作时
IR Summary 所以是兩階段的IR - High and Low (low是instruction based的,可以用來優化memory相關的操作,還有指令級的排序), 最後才是machine code Glow lowers a traditional neural network dataflow graph into a two-phase strongly-typed intermediate representation (IR).</description>
    </item>
    
  </channel>
</rss>